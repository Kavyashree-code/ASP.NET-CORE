Asp.net core =  inside program.cs  = app.MapGet();

//request example1

string path = context.Request.Path;
string method = context.Request.Method;
context.Response.StatusCode = 200;
return "request path: " + path + "  " + "method property: " + method;
----------------------------------------------------------------------------------
//req header example2

if (context.Request.Headers.ContainsKey("User-Agent"))
{
    var UserAgent = context.Request.Headers["User-Agent"];
    return "User Agent  : " + UserAgent;
}
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
response exapmple

//new header created inside response header
context.Response.Headers["Kavya"] = "Welcome";

//to write html content
context.Response.Headers["Content-Type"] = "text/HTML";
return "<h1>Hare KRISHNA</h1>";
--------------------------------------------------------------------------------------
//browser all pages same data access

app.Run(async (HttpContext context) =>
{
   await context.Response.WriteAsync("Hello");
}

-------------------------------------------------------------------------------------
//to render in home path home content, in contact path contact content, product path product content, 

app.Run(async (HttpContext context) =>
{ 
    string path = context.Request.Path;
    if (path == "/" || path == "/Home")
    {
        context.Response.StatusCode = 200;
        await context.Response.WriteAsync("Home Page");
    }
    else if(path == "/Contact")
    {
        context.Response.StatusCode = 200;
        await context.Response.WriteAsync("Contact Page");
    }
    else if (path == "/Product")
    {
        context.Response.StatusCode = 200;
        if(context.Request.Query.ContainsKey("id") && context.Request.Query.ContainsKey("name"))
        {
           string id = context.Request.Query["id"];
            string name = context.Request.Query["name"];
            await context.Response.WriteAsync("Product id Page: " +id +" "+ "Product name Page: " + name);
            return;
        }
        await context.Response.WriteAsync("Product Page");
    }
    else
    {
        context.Response.StatusCode = 404;
        await context.Response.WriteAsync("Page NOT FOUND");
    }
   
}
);
